name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  release:
    types: [ created ]

env:
  CARGO_TERM_COLOR: always

permissions:
  checks: write
  contents: write

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy
      - name: Run Clippy
        run: cargo clippy --all-targets --all-features -- -D warnings
      - name: Build
        run: cargo build --verbose --release
      - name: Rename Linux binary
        run: mv target/release/oxygen target/release/oxygen-linux
      - name: Upload Linux binary
        uses: actions/upload-artifact@v4
        with:
          name: oxygen-linux
          path: target/release/oxygen-linux
          if-no-files-found: error

  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
      - name: Build
        run: cargo build --verbose --release
      - name: Rename Windows binary
        run: mv target/release/oxygen.exe target/release/oxygen-windows.exe
      - name: Upload Windows binary
        uses: actions/upload-artifact@v4
        with:
          name: oxygen-windows
          path: target/release/oxygen-windows.exe
          if-no-files-found: error

  build-macos:
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
      - name: Build
        run: cargo build --verbose --release
      - name: Rename macOS binary
        run: mv target/release/oxygen target/release/oxygen-macos
      - name: Upload macOS binary
        uses: actions/upload-artifact@v4
        with:
          name: oxygen-macos
          path: target/release/oxygen-macos
          if-no-files-found: error

  publish-release:
    needs: [build-linux, build-windows, build-macos]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' || github.event_name == 'release' && github.event.action == 'created'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Download Linux binary
        uses: actions/download-artifact@v4
        with:
          name: oxygen-linux
          path: artifacts/linux
      - name: Download Windows binary
        uses: actions/download-artifact@v4
        with:
          name: oxygen-windows
          path: artifacts/windows
      - name: Download macOS binary
        uses: actions/download-artifact@v4
        with:
          name: oxygen-macos
          path: artifacts/macos
      - name: Verify binaries exist
        run: |
          ls -l artifacts/linux/oxygen-linux || { echo "Linux binary not found"; exit 1; }
          ls -l artifacts/windows/oxygen-windows.exe || { echo "Windows binary not found"; exit 1; }
          ls -l artifacts/macos/oxygen-macos || { echo "macOS binary not found"; exit 1; }
      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.event_name == 'release' && github.event.release.tag_name || format('v{0}', github.run_number) }}
          name: ${{ github.event_name == 'release' && github.event.release.name || format('Release v{0}', github.run_number) }}
          files: |
            artifacts/linux/oxygen-linux
            artifacts/windows/oxygen-windows.exe
            artifacts/macos/oxygen-macos
          token: ${{ secrets.GITHUB_TOKEN }}
